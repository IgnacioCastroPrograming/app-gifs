{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","setImages","useEffect","then","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yKAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAkB/C,OACC,8BACC,sBAAMC,SAZa,SAACC,GACrBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOd,SACE,uBACAO,KAAK,OACLC,MAAQT,EACRU,SApBsB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,e,QCNZG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAGnC,OACC,sBAAKC,UAAU,OAAf,UACC,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCRMK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGhBN,EAHgB,0FAG0EO,UAAWF,GAHrF,gDAKHG,MAAMR,GALH,cAKhBS,EALgB,gBAMCA,EAAKC,OANN,uBAMdC,EANc,EAMdA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC7B,MAAO,CACNC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAZd,kBAgBfY,GAhBe,4CAAH,sDCINM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,EAEXpB,mBAAS,IAFE,mBAEhC+B,EAFgC,KAExBG,EAFwB,KAavC,OATAC,qBAAW,WACVhB,EAASC,GACRgB,KAAMF,KACL,IAOF,eAAC,WAAD,WACC,6BAAKd,IACL,qBAAKJ,UAAU,YAAf,SAEEe,EAAOH,KAAK,SAAAC,GAAG,OACd,cAAC,EAAD,eAEMA,GADAA,EAAIC,aCpBHO,EAAe,WAAO,IAAD,EACGrC,mBAAS,CAAC,cADb,mBAC1BsC,EAD0B,KACdvC,EADc,KAOjC,OACC,gCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEEuC,EAAWV,KAAK,SAAAR,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCdXmB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.59d2e52d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif ( inputValue.trim().length > 2 ) {\r\n\t\t\tsetCategories(cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tvalue={ inputValue }\r\n\t\t\t\t\tonChange={ handleInputChange }\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\t// console.log({id, title, url});\r\n\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t)\r\n}","export const getGifs = async (category) => {\r\n\r\n\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?api_key=9q9PVf8freQomumVzuoKG4cS4C6IZW3R&q=${ encodeURI( category ) }&limit=10&offset=0&rating=g&lang=en`;\r\n\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map( img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t}\r\n\t\t} )\r\n\r\n\treturn gifs;\r\n}","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const  GifGrid = ({category}) => {\r\n\r\n\tconst [images, setImages] = useState([]);\r\n\r\n\tuseEffect( () => {\r\n\t\tgetGifs( category )\r\n\t\t.then( setImages );\r\n\t} ,[])\r\n\r\n\t\r\n\r\n\t// getGifs();\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h3>{category}</h3>\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{ \r\n\t\t\t\t\timages.map( img => (\r\n\t\t\t\t\t\t<GifGridItem \r\n\t\t\t\t\t\t\tkey={img.id}\r\n\t\t\t\t\t\t\t{ ...img  }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) ) \r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t)\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n\t// const handleApp = () => {\r\n\t// \tsetCategories( cats => [...cats, 'YO-GI-HU'] )\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories}/>\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{ \r\n\t\t\t\t\tcategories.map( category => \r\n\t\t\t\t\t\t<GifGrid \r\n\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\tcategory={category} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ol>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}